{"version":3,"sources":["api/api.js","components/Home.module.css","components/Header.module.css","redux/exchanges-selectors.js","redux/information-reducer.js","components/Header.jsx","components/Home.jsx","redux/home-reducer.js","components/HomeContainer.jsx","App.js","redux/redux-store.js","index.js"],"names":["instance","axios","baseURL","exchangesAPI","getExchanges","currency","get","then","response","data","informationAPI","getInformation","id","name","genesis_date","symbol","image","small","links","homepage","currencyConverterAPI","getCurrencyConverter","currencyResultAPI","getCurrencyResult","selected","currencyInput","currencyResult","marketCapAPI","getMarketCa","marketCap","market_cap","marketCapRank","market_cap_rank","totalVolume","total_volume","totalSupply","total_supply","module","exports","createSelector","state","homePage","cryptocurrency","informationPage","information","getIsFetching","isFetching","initialState","currencySelected","currencyIR","setIsFetching","type","setCurrencyInput","setCurrencyResult","setCurrencySelected","setMarketCap","requestInformation","dispatch","a","test","requestResult","requestMarket","informationReducer","action","Header","className","s","header","blockNavLink","to","navLink","Home","props","blockHeading","columnHeading1","columnHeading2","columnHeading3","onClick","columnHeading4","price","onChange","e","eValue","target","value","setCurrency","request","price1h","price24h","price7d","map","u","index","key","blockInformation","columnInformation1","columnInformation2","src","alt","columnInformation3","columnInformation4","current_price","price_change_percentage_1h_in_currency","toFixed","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","priceSort","nameSort","homeReducer","sort","b","p1h","p24h","p7d","ns","HomeContainer","onPageChanged","this","setPriceSort","setPrice1h","setPrice24h","setPrice7d","setNameSort","React","Component","compose","connect","InformationContainer","lazy","App","exact","path","render","Suspense","fallback","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0057d666.chunk.js","sourcesContent":["import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.coingecko.com/api/v3/',\r\n})\r\n\r\nexport const exchangesAPI = {\r\n    getExchanges(currency) {\r\n        return instance.get(`coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=150&sparkline=false&price_change_percentage=1h%2C24h%2C7d`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const informationAPI = {\r\n    getInformation(id) {\r\n        return instance.get(`coins/${id}?tickers=false&market_data=false&community_data=false&developer_data=false&sparkline=false`)\r\n            .then(response => {\r\n                return {name: response.data.name,\r\n                        genesis_date: response.data.genesis_date,\r\n                        symbol: response.data.symbol,\r\n                        image: response.data.image.small,\r\n                        links: response.data.links.homepage[0]}\r\n            })\r\n    }\r\n}\r\n\r\nexport const currencyConverterAPI = {\r\n    getCurrencyConverter() {\r\n        return instance.get(`simple/supported_vs_currencies`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const currencyResultAPI = {\r\n    getCurrencyResult(id, selected, currencyInput) {\r\n        return instance.get(`simple/price?ids=${id}&vs_currencies=${selected}`)\r\n            .then(response => {\r\n                return {currencyResult: response.data[id][selected],\r\n                        currencyInput: currencyInput}\r\n            })\r\n    }\r\n}\r\n\r\nexport const marketCapAPI = {\r\n    getMarketCa(id, selected) {\r\n        return instance.get(`coins/markets?vs_currency=${selected}&ids=${id}&order=market_cap_desc&per_page=100&page=1&sparkline=false`)\r\n            .then(response => {\r\n                return {\r\n                    marketCap: response.data[0].market_cap,\r\n                    marketCapRank: response.data[0].market_cap_rank,\r\n                    totalVolume: response.data[0].total_volume,\r\n                    totalSupply: response.data[0].total_supply\r\n                }\r\n            })\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockInformation\":\"Home_blockInformation__3YDtd\",\"blockHeading\":\"Home_blockHeading__34FB9\",\"currency\":\"Home_currency__2lqMW\",\"navLink\":\"Home_navLink__1Hucb\",\"columnHeading1\":\"Home_columnHeading1__2D2bH\",\"columnInformation1\":\"Home_columnInformation1__Lyg9l\",\"columnHeading2\":\"Home_columnHeading2__2_Y81\",\"columnInformation2\":\"Home_columnInformation2__4l4cb\",\"columnHeading3\":\"Home_columnHeading3__1MTnX\",\"columnInformation3\":\"Home_columnInformation3__3_qL9\",\"columnHeading4\":\"Home_columnHeading4__3cG5x\",\"columnInformation4\":\"Home_columnInformation4__2FmWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__VSYVx\",\"blockNavLink\":\"Header_blockNavLink__2EWw4\",\"navLink\":\"Header_navLink__d6DvO\"};","import {createSelector} from \"reselect\";\r\n\r\nconst getExchangesSelector = (state) => {\r\n    return state.homePage.cryptocurrency;\r\n}\r\n\r\nexport const getExchanges = createSelector(getExchangesSelector,\r\n    (cryptocurrency) => {\r\n        return cryptocurrency\r\n    })\r\n\r\nconst getInformationSelector = (state) => {\r\n    return state.informationPage.information;\r\n}\r\n\r\nexport const getInformation = createSelector(getInformationSelector,\r\n    (information) => {\r\n        return information\r\n    })\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.informationPage.isFetching;\r\n}\r\n\r\nconst getCurrencyConverterSelector = (state) => {\r\n    return state.informationPage.currency;\r\n}\r\n\r\nexport const getCurrencyConverter = createSelector(getCurrencyConverterSelector,\r\n    (currency) => {\r\n        return currency\r\n    })\r\n\r\nconst getCurrencyResultSelector = (state) => {\r\n    return state.informationPage.currencyResult;\r\n}\r\n\r\nexport const getCurrencyResult = createSelector(getCurrencyResultSelector,\r\n    (currencyResult) => {\r\n        return currencyResult\r\n    })\r\n\r\nconst getMarketCapSelector = (state) => {\r\n    return state.informationPage.marketCap;\r\n}\r\n\r\nexport const getMarketCa = createSelector(getMarketCapSelector,\r\n    (marketCap) => {\r\n    return marketCap\r\n    })","import {currencyConverterAPI, currencyResultAPI, informationAPI, marketCapAPI} from \"../api/api\";\r\n\r\nconst INFORMATION_TEST = 'INFORMATION_TEST'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst CURRENCY_CONVERTER = 'CURRENCY_CONVERTER'\r\nconst CURRENCY_INPUT = 'CURRENCY_INPUT'\r\nconst CURRENCY_RESULT = 'CURRENCY_RESULT'\r\nconst CURRENCY_SELECTED = 'CURRENCY_SELECTED'\r\nconst MARKET_CAP = 'MARKET_CAP'\r\n\r\nlet initialState = {\r\n        information: {},\r\n        isFetching: false,\r\n        currency: [],\r\n        currencySelected: 'usd',\r\n        currencyInput: 1,\r\n        currencyResult: '',\r\n        currencyIR: '',\r\n        marketCap: ''\r\n}\r\n\r\nconst informationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INFORMATION_TEST:\r\n            return {\r\n                ...state,\r\n                information: action.test\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case CURRENCY_CONVERTER:\r\n            return {\r\n                ...state,\r\n                currency: action.currency\r\n            }\r\n        case CURRENCY_INPUT:\r\n        return {\r\n            ...state,\r\n            currencyInput: action.currencyInput,\r\n            currencyIR: action.currencyInput * action.currencyResult\r\n        }\r\n        case CURRENCY_RESULT:\r\n        return {\r\n            ...state,\r\n            currencyResult: action.data.currencyResult,\r\n            currencyIR: action.data.currencyInput * action.data.currencyResult\r\n        }\r\n        case CURRENCY_SELECTED:\r\n        return {\r\n            ...state,\r\n            currencySelected: action.currencySelected\r\n        }\r\n        case MARKET_CAP:\r\n            return {\r\n                ...state,\r\n                marketCap: action.marketCap\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInformation = (test) => ({type: INFORMATION_TEST, test})\r\nexport const setIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const setCurrencyConverter = (currency) => ({type: CURRENCY_CONVERTER, currency})\r\nexport const setCurrencyInput = (currencyInput, currencyResult) => ({type: CURRENCY_INPUT, currencyInput, currencyResult})\r\nexport const setCurrencyResult = (data) => ({type: CURRENCY_RESULT, data})\r\nexport const setCurrencySelected = (currencySelected) => ({type: CURRENCY_SELECTED, currencySelected})\r\nexport const setMarketCap = (marketCap) => ({type: MARKET_CAP, marketCap})\r\nexport const requestInformation = (id) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true))\r\n        let data = await informationAPI.getInformation(id);\r\n            dispatch(setInformation(data))\r\n            dispatch(setIsFetching(false))\r\n\r\n        let response = await currencyConverterAPI.getCurrencyConverter()\r\n            dispatch(setCurrencyConverter(response))\r\n    }\r\n}\r\n\r\nexport const requestResult = (id, selected, currencyInput) => {\r\n    return async (dispatch) => {\r\n        let data = await currencyResultAPI.getCurrencyResult(id, selected, currencyInput)\r\n            dispatch(setCurrencyResult(data))\r\n        let response = await marketCapAPI.getMarketCa(id, selected, currencyInput)\r\n            dispatch(setMarketCap(response))\r\n    }\r\n}\r\nexport const requestMarket = (id, selected) => {\r\n    return async (dispatch) => {\r\n        let response = await marketCapAPI.getMarketCa(id, selected)\r\n        dispatch(setMarketCap(response))\r\n    }\r\n}\r\n\r\nexport default informationReducer","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <p>Explorer криптовалют</p>\r\n            <div className={s.blockNavLink}>\r\n                <NavLink to={'/home'} className={s.navLink}>Главная</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport s from './Home.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Home = (props) => {\r\n    let vvv = (e) => {\r\n        const eValue = e.target.value\r\n        props.setCurrency(eValue)\r\n        props.request(eValue)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.blockHeading}>\r\n                <div className={s.columnHeading1}>№</div>\r\n                <div className={s.columnHeading2}></div>\r\n                <div className={s.columnHeading3} onClick={() => {props.name()}}>Название</div>\r\n                <div className={s.columnHeading4} onClick={() => {props.price()}}>Стоимость ({props.currency})</div>\r\n                <div className={s.currency}>\r\n                    <select onChange={vvv}>\r\n                        <option>usd</option>\r\n                        <option>eur</option>\r\n                        <option>rub</option>\r\n                    </select>\r\n                </div>\r\n                <div className={s.columnHeading4} onClick={() => {props.price1h()}}>Изменения за 1ч</div>\r\n                <div className={s.columnHeading4} onClick={() => {props.price24h()}}>Изменения за 1д</div>\r\n                <div className={s.columnHeading4} onClick={() => {props.price7d()}}>Изменения за 7д</div>\r\n            </div>\r\n                {\r\n                    props.cryptocurrency.map((u, index) =>\r\n                        <NavLink to={'/information/' + u.id} className={s.navLink} key={u.id}>\r\n                            <div className={s.blockInformation} key={u.id}>\r\n                                <div className={s.columnInformation1}>{index+1}</div>\r\n                                <img className={s.columnInformation2} src={u.image} alt=\"\"/>\r\n                                <div className={s.columnInformation3}>{u.name}</div>\r\n                                <div className={s.columnInformation4}>{u.current_price}</div>\r\n                                <div className={s.columnInformation4}>{u.price_change_percentage_1h_in_currency === null ? 0 :\r\n                                    u.price_change_percentage_1h_in_currency.toFixed(2) + '%'}</div>\r\n                                <div className={s.columnInformation4}>{u.price_change_percentage_24h_in_currency === null ? 0 :\r\n                                    u.price_change_percentage_24h_in_currency.toFixed(2) + '%'}</div>\r\n                                <div className={s.columnInformation4}>{u.price_change_percentage_7d_in_currency === null ? 0 :\r\n                                    u.price_change_percentage_7d_in_currency.toFixed(2) + '%'}</div>\r\n                                <br/>\r\n                            </div>\r\n                        </NavLink>)\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import {exchangesAPI} from \"../api/api\";\r\n\r\nconst HOME_TEST = 'HOME_TEST'\r\nconst PRICE_SORT = 'PRICE_SORT'\r\nconst NAME_SORT = 'NAME_SORT'\r\nconst PRICE_1H = 'PRICE_1H'\r\nconst PRICE_24H = 'PRICE_24H'\r\nconst PRICE_7D = 'PRICE_7D'\r\nconst CURRENCY = 'CURRENCY'\r\n\r\nlet initialState = {\r\n    cryptocurrency:[],\r\n    priceSort: false,\r\n    nameSort: false,\r\n    price1h: false,\r\n    price24h: false,\r\n    price7d: false,\r\n    currency: 'usd'\r\n}\r\n\r\nconst homeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HOME_TEST:\r\n            return {\r\n                ...state,\r\n                cryptocurrency: action.cryptocurrency\r\n            }\r\n        case PRICE_SORT:\r\n            let s = state.cryptocurrency.map(u => u)\r\n            state.priceSort ? s.sort((a, b) => a.current_price - b.current_price)\r\n             : s.sort((a, b) => b.current_price - a.current_price)\r\n            return  {\r\n                ...state,\r\n                priceSort: state.priceSort ? false : true,\r\n                cryptocurrency: s\r\n            }\r\n        case PRICE_1H:\r\n            let p1h = state.cryptocurrency.map(u => u)\r\n            state.price1h ? p1h.sort((a, b) => a.price_change_percentage_1h_in_currency - b.price_change_percentage_1h_in_currency)\r\n                : p1h.sort((a, b) => b.price_change_percentage_1h_in_currency - a.price_change_percentage_1h_in_currency)\r\n            return  {\r\n                ...state,\r\n                price1h: state.price1h ? false : true,\r\n                cryptocurrency: p1h\r\n            }\r\n        case PRICE_24H:\r\n            let p24h = state.cryptocurrency.map(u => u)\r\n            state.price24h ? p24h.sort((a, b) => a.price_change_percentage_24h_in_currency - b.price_change_percentage_24h_in_currency)\r\n                : p24h.sort((a, b) => b.price_change_percentage_24h_in_currency - a.price_change_percentage_24h_in_currency)\r\n            return  {\r\n                ...state,\r\n                price24h: state.price1h ? false : true,\r\n                cryptocurrency: p24h\r\n            }\r\n        case PRICE_7D:\r\n            let p7d = state.cryptocurrency.map(u => u)\r\n            state.price7d ? p7d.sort((a, b) => a.price_change_percentage_7d_in_currency - b.price_change_percentage_7d_in_currency)\r\n                : p7d.sort((a, b) => b.price_change_percentage_7d_in_currency - a.price_change_percentage_7d_in_currency)\r\n            return  {\r\n                ...state,\r\n                price7d: state.price7d ? false : true,\r\n                cryptocurrency: p7d\r\n            }\r\n        case NAME_SORT:\r\n            let ns = state.cryptocurrency.map(u => u)\r\n            state.nameSort ? ns.sort((a, b) => b.name > a.name)\r\n                : ns.sort((a, b) => b.name < a.name)\r\n            return  {\r\n                ...state,\r\n                nameSort: state.nameSort ? false : true,\r\n                cryptocurrency: ns\r\n            }\r\n        case CURRENCY:\r\n            return  {\r\n                ...state,\r\n                currency: action.currency\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setExchanges = (cryptocurrency) => ({type: HOME_TEST, cryptocurrency})\r\nexport const setPriceSort = () => ({type: PRICE_SORT})\r\nexport const setPrice1h = () => ({type: PRICE_1H})\r\nexport const setPrice24h = () => ({type: PRICE_24H})\r\nexport const setPrice7d = () => ({type: PRICE_7D})\r\nexport const setNameSort = () => ({type: NAME_SORT})\r\nexport const setCurrency = (currency) => ({type: CURRENCY, currency})\r\nexport const requestExchanges = (currency) => {\r\n    return (dispatch) => {\r\n        exchangesAPI.getExchanges(currency).then(data => {\r\n            dispatch(setExchanges(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport default homeReducer","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from \"redux\";\r\nimport Home from \"./Home\";\r\nimport {getExchanges} from \"../redux/exchanges-selectors\";\r\nimport {\r\n    requestExchanges,\r\n    setPriceSort,\r\n    setNameSort,\r\n    setPrice1h,\r\n    setPrice24h,\r\n    setPrice7d,\r\n    setCurrency\r\n} from \"../redux/home-reducer\";\r\n\r\nclass HomeContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getExchanges(this.props.currency)\r\n    }\r\n\r\n    onPageChanged = (currency) => {\r\n        this.props.getExchanges(currency)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Home cryptocurrency={this.props.cryptocurrency} price={this.props.setPriceSort}\r\n                  price1h={this.props.setPrice1h} price24h={this.props.setPrice24h} price7d={this.props.setPrice7d}\r\n                  name={this.props.setNameSort} setCurrency={this.props.setCurrency} request={this.onPageChanged}\r\n                  currency={this.props.currency}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        cryptocurrency: getExchanges(state),\r\n        currency: state.homePage.currency\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getExchanges: requestExchanges,\r\n        setPriceSort,\r\n        setNameSort,\r\n        setPrice1h,\r\n        setPrice24h,\r\n        setPrice7d,\r\n        setCurrency\r\n    })) (HomeContainer)","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport HomeContainer from \"./components/HomeContainer\";\nimport {Redirect, Route} from \"react-router-dom\";\nconst InformationContainer = React.lazy(() => import (\"./components/InformationContainer\"))\n\nfunction App(props) {\n  return (\n      <>\n        <Header />\n          {/*<Redirect from='/' to=\"/home\"/>*/}\n          <Route exact path='/' render={() => <HomeContainer />} />\n          <Route path='/home' render={() => <HomeContainer />} />\n          <Route path='/information/:id' render={() => {return <React.Suspense fallback={<div>Загрузка...</div>}>\n                  <InformationContainer/>\n              </React.Suspense>\n          }} />\n      </>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport homeReducer from './home-reducer'\r\nimport informationReducer from \"./information-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    homePage: homeReducer,\r\n    informationPage: informationReducer\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store = {store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root')\n);\n"],"sourceRoot":""}